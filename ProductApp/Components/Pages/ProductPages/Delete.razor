@page "/products/delete"
@using Microsoft.EntityFrameworkCore
@using ProductApp.Data
@inject IDbContextFactory<ProductApp.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>УДАЛЕНИЕ</PageTitle>

<h1>Удалить товар</h1>

<p>Вы уверены, что хотите удалить товар?</p>
<div>
    <hr />
    @if (product is null)
    {
        <p><em>Загрузка...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Наименование товара</dt>
            <dd class="col-sm-10">@product.ProductName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Описание</dt>
            <dd class="col-sm-10">@product.Description</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Цена</dt>
            <dd class="col-sm-10">@product.Price</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Код категории</dt>
            <dd class="col-sm-10">@product.CategoryId</dd>
        </dl>
        <EditForm method="post" Model="product" OnValidSubmit="DeleteProduct" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(product is null)">Удалить</button> |
            <a href="/products?categoryid=@product!.CategoryId">Вернуться к списку товаров</a>
        </EditForm>
    }
</div>

@code {
    private Product? product;

    private int CategoryId { get; set; }

    [SupplyParameterFromQuery]
    private int ProductId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        product = await context.Products.FirstOrDefaultAsync(m => m.ProductId == ProductId);

        if (product is null)
        {
            NavigationManager.NavigateTo("notfound");
        }

        CategoryId = product!.CategoryId;
    }

    private async Task DeleteProduct()
    {
        using var context = DbFactory.CreateDbContext();
        context.Products.Remove(product!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/products?categoryid="+CategoryId);
    }
}
